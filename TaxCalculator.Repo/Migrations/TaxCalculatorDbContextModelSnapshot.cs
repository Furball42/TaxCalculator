// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Repo;

namespace TaxCalculator.Repo.Migrations
{
    [DbContext(typeof(TaxCalculatorDbContext))]
    partial class TaxCalculatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxCalculator.Core.Models.CalculationResults.CalculationResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnualIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CalculatedTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalculationResult");
                });

            modelBuilder.Entity("TaxCalculator.Core.Models.CalculationTypes.FlatRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("FlatRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Flat Rate",
                            Rate = 17.5m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Models.CalculationTypes.FlatValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValueThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("FlatValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Flat Rate",
                            Percentage = 5.0m,
                            Value = 10000m,
                            ValueThreshold = 200000m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Models.CalculationTypes.Progressive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExtendedData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Progressives");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Progressive",
                            ExtendedData = "[{\"Rate\":10.0,\"Min\":0.0,\"Max\":8350.0,\"SortOrder\":1},{\"Rate\":15.0,\"Min\":8351.0,\"Max\":33950.0,\"SortOrder\":2},{\"Rate\":25.0,\"Min\":33951.0,\"Max\":82250.0,\"SortOrder\":3},{\"Rate\":28.0,\"Min\":82251.0,\"Max\":171550.0,\"SortOrder\":4},{\"Rate\":33.0,\"Min\":171551.0,\"Max\":372950.0,\"SortOrder\":5},{\"Rate\":35.0,\"Min\":372951.0,\"Max\":-1.0,\"SortOrder\":6}]"
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Models.PostalCodes.PostalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalculationType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostalCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CalculationType = 2,
                            Description = "7441",
                            ReferenceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CalculationType = 0,
                            Description = "A100",
                            ReferenceId = 1
                        },
                        new
                        {
                            Id = 3,
                            CalculationType = 1,
                            Description = "7000",
                            ReferenceId = 1
                        },
                        new
                        {
                            Id = 4,
                            CalculationType = 2,
                            Description = "1000",
                            ReferenceId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
