#pragma checksum "C:\Users\Furball\source\repos\TaxCalculator\TaxCalculator.MVC\Views\Calculations\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d7c87b9662df103b5a143427a6a011ca25bb6462"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Calculations_Index), @"mvc.1.0.view", @"/Views/Calculations/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Furball\source\repos\TaxCalculator\TaxCalculator.MVC\Views\_ViewImports.cshtml"
using TaxCalculator.MVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Furball\source\repos\TaxCalculator\TaxCalculator.MVC\Views\_ViewImports.cshtml"
using TaxCalculator.MVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d7c87b9662df103b5a143427a6a011ca25bb6462", @"/Views/Calculations/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be48b2b5711a2690797042abf4956ad0c98d5749", @"/Views/_ViewImports.cshtml")]
    public class Views_Calculations_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Furball\source\repos\TaxCalculator\TaxCalculator.MVC\Views\Calculations\Index.cshtml"
  
    ViewData["Title"] = "Calculations";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<link rel=""stylesheet"" href=""//cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css"">

<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-md-1"">
        </div>
        <div class=""col-md-10"">
            <div class=""card"">
                <h5 class=""card-header"">
                    Calculations
                </h5>
                <div class=""card-body"">
                    <table id=""calcsTable"" class=""display"">
                        <thead>
                            <tr>
                                <th>Postal Code</th>
                                <th>Annual Income</th>
                                <th>Calculated Tax</th>
                                <th>Date Created</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class=""card-footer"">
                </div>
            </div>
        </div>
        <div class=""col-md-1"">
        </div>");
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script src=""//cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js""></script>
    <script src=""//cdn.datatables.net/plug-ins/1.10.15/dataRender/datetime.js""></script>
    <script src=""//cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js""></script>
    

    <script type=""text/javascript"">

        $(document).ready(function () {
            $('#calcsTable').DataTable({
                ajax: {
                    url: ""http://localhost:5000/Calculation/GetCalculationsForDatables/"",
                    type: ""GET""
                },
                columns: [
                    { data: 'postalCode' },
                    { data: 'annualIncome', className: ""text-right"", render: $.fn.dataTable.render.number(' ', '.', 2, '') },
                    { data: 'calculatedTax', className: ""text-right"", render: $.fn.dataTable.render.number(' ', '.', 2, '') },
                    { data: 'dateTimeCreated' },
                ],
                columnDefs: [{
                    targ");
                WriteLiteral(@"ets: [3], render: function (data) {
                        return moment(data).format('D MMMM YYYY');
                    }
                }],
                processing: true,
                serverSide: false,
                ordering: false,
                paging: true,
                searching: false,
                language: {
                    ""decimal"": ""."",
                    ""thousands"": "" ""
                }
            });
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
